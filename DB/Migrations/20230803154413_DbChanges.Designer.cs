// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ResiPay.DB;

#nullable disable

namespace ResiPay.DB.Migrations
{
    [DbContext(typeof(ResiPayDbContext))]
    [Migration("20230803154413_DbChanges")]
    partial class DbChanges
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApartmentUser", b =>
                {
                    b.Property<int>("ApartmentsId")
                        .HasColumnType("integer");

                    b.Property<int>("UsersId")
                        .HasColumnType("integer");

                    b.HasKey("ApartmentsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("UserApartments", "dbo");
                });

            modelBuilder.Entity("MessageUser", b =>
                {
                    b.Property<int>("MessageRecieversId")
                        .HasColumnType("integer");

                    b.Property<int>("RecieversId")
                        .HasColumnType("integer");

                    b.HasKey("MessageRecieversId", "RecieversId");

                    b.HasIndex("RecieversId");

                    b.ToTable("UserMessages", "dbo");
                });

            modelBuilder.Entity("ResiPay.DB.Entities.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("apartmen_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApartmentBlock")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("block");

                    b.Property<int>("ApartmentFloor")
                        .HasColumnType("integer")
                        .HasColumnName("floor");

                    b.Property<int>("ApartmentNumber")
                        .HasColumnType("integer")
                        .HasColumnName("no");

                    b.Property<int>("ApartmentType")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("date")
                        .HasColumnName("insert_date");

                    b.Property<int>("OwnStatus")
                        .HasColumnType("integer")
                        .HasColumnName("own_status");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("date")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.ToTable("Apartment", "dbo");
                });

            modelBuilder.Entity("ResiPay.DB.Entities.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("bill_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(15,2)")
                        .HasColumnName("amount");

                    b.Property<int>("ApartmentId")
                        .HasColumnType("integer")
                        .HasColumnName("apartment_id");

                    b.Property<string>("BillName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("bill_name");

                    b.Property<int>("BillType")
                        .HasColumnType("integer")
                        .HasColumnName("category");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("date")
                        .HasColumnName("due_date");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("date")
                        .HasColumnName("assign_date");

                    b.Property<bool>("IsPaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("payment_status");

                    b.Property<int>("Month")
                        .HasMaxLength(30)
                        .HasColumnType("integer")
                        .HasColumnName("month");

                    b.Property<DateTime?>("PayedDate")
                        .HasColumnType("date")
                        .HasColumnName("payed_date");

                    b.Property<int>("PayerId")
                        .HasColumnType("integer")
                        .HasColumnName("payer_id");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("date")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("PayerId");

                    b.ToTable("Bill", "dbo");
                });

            modelBuilder.Entity("ResiPay.DB.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("message_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("content");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("SenderId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("subject");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.HasKey("Id");

                    b.HasIndex("SenderId");

                    b.ToTable("Message", "dbo");
                });

            modelBuilder.Entity("ResiPay.DB.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CarPlate")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("email");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("identity_number");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("date")
                        .HasColumnName("membership_date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean")
                        .HasColumnName("delete_status");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("surname");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("date")
                        .HasColumnName("update_date");

                    b.HasKey("Id");

                    b.HasIndex("IdentityNumber");

                    b.ToTable("User", "dbo");
                });

            modelBuilder.Entity("ApartmentUser", b =>
                {
                    b.HasOne("ResiPay.DB.Entities.Apartment", null)
                        .WithMany()
                        .HasForeignKey("ApartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResiPay.DB.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MessageUser", b =>
                {
                    b.HasOne("ResiPay.DB.Entities.Message", null)
                        .WithMany()
                        .HasForeignKey("MessageRecieversId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResiPay.DB.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("RecieversId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ResiPay.DB.Entities.Bill", b =>
                {
                    b.HasOne("ResiPay.DB.Entities.Apartment", "Apartment")
                        .WithMany("Bills")
                        .HasForeignKey("ApartmentId")
                        .IsRequired();

                    b.HasOne("ResiPay.DB.Entities.User", "Payer")
                        .WithMany("Bills")
                        .HasForeignKey("PayerId")
                        .IsRequired();

                    b.Navigation("Apartment");

                    b.Navigation("Payer");
                });

            modelBuilder.Entity("ResiPay.DB.Entities.Message", b =>
                {
                    b.HasOne("ResiPay.DB.Entities.User", "Sender")
                        .WithMany("MessageSenders")
                        .HasForeignKey("SenderId")
                        .IsRequired();

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("ResiPay.DB.Entities.Apartment", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("ResiPay.DB.Entities.User", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("MessageSenders");
                });
#pragma warning restore 612, 618
        }
    }
}
